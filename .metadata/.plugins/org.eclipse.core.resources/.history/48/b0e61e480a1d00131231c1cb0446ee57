package com.Fluffeater.semideus.AI;

import java.util.Random;

import com.Fluffeater.semideus.Instance.InstanceList;

public class Movement {

	public static double toInst(float xe, float ye, int target) {
		double dir = 0;

		double dx = InstanceList.instList.get(target).xe - xe;
		double dy = -(InstanceList.instList.get(target).ye - ye);

		double inRads = Math.atan2(dy, dx);
 
		if (inRads < 0)
			inRads = Math.abs(inRads);
		else
			inRads = 2 * Math.PI - inRads;

		dir = (Math.toDegrees(inRads) + 270) % 359;
		dir = dir / 360;
		dir = dir * 8;
		return dir;
	}
	
	public static double betweenPoints(float x1, float y1, float x2, float y2){
		double dx = x1 - x2;
		double dy = y2 - y1;

		double inRads = Math.atan2(dy, dx);

		if (inRads < 0)
			inRads = Math.abs(inRads);
		else
			inRads = 2 * Math.PI - inRads;
		return Math.toDegrees(inRads);
	}
	
	public static double distance(float x1, float y1, float x2, float y2){
		float b = ((x2 - x1) * (x2 - x1) );
		float c = ((y2 - y1) * (y2 - y1));
		return Math.sqrt(c + b);
	}
}
